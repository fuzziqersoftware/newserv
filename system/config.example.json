{
  // Configuration file for newserv.

  // This file is standard JSON with C-style comments. Some other extensions to
  // the JSON standard are also supported; notably, integers may be specified in
  // hexadecimal using the 0x prefix. If you use a text editor that auto-formats
  // JSON on save, it may be confused by this file's format. Make sure it
  // doesn't automatically turn hex integers into strings, for example.

  // If you're just setting up a newserv instance for your personal use, you
  // probably only need to change LocalAddress. Set LocalAddress to your
  // machine's local IPv4 address (usually something like 10.0.x.x or
  // 192.168.x.x). In PSO's network configuration, set the DNS server address to
  // the same address you entered in LocalAddress in this file.

  // If you also want people to be able to conenct to your newserv instance from
  // the Internet, you'll need to set ExternalAddress to your public-facing IPv4
  // address (you can find this by visiting e.g. whatismyip.com). You'll also
  // need to set up port forwarding on your router for all the TCP ports listed
  // in PortConfiguration (9000, 9001, etc.), as well as UDP port 53. Players
  // from outside your network can then connect to your server by entering your
  // public address as their DNS server address in PSO's network configuration.

  // Server's name (maximum 16 characters). This appears in the upper-right
  // corner of the screen while in lobbies.
  "ServerName": "newserv",

  // Address to connect local clients to (IP address or interface name). This
  // is the address that newserv will expect clients on the same network as the
  // server to connect to.
  "LocalAddress": "en0",
  // Address to connect external clients to (IP address or interface name). This
  // is the address that newserv will expect clients not on the same network as
  // the server to connect to. If you're running newserv behind a NAT (this
  // applies to most home networks), this should be your router's public-facing
  // IP address.
  "ExternalAddress": "10.0.1.5",

  // Port to listen for DNS queries on. To disable the DNS server, comment this
  // out or set it to zero.
  "DNSServerPort": 53,

  // Ports to listen for game connections on.
  "PortConfiguration": {
    // Format of entries in this dictionary:
    // name: [port, version, behavior]

    // Various versions of PSO hardcode these ports in the clients. Don't change
    // these unless you don't want to support certain versions of PSO.
    // Note: The pc_console_detect behavior is used for separating PSO PC and
    // DC/GC clients that connect on the same port. On these ports, newserv
    // sends a single command that PC and DC/GC clients parse in different ways,
    // leading them to connect to either the console-login port or the pc-login
    // port (both of which must be defined below if pc_console_detect is used).
    // If you want to support only PC, you can change the pc_console_detect
    // behavior for these ports to login_server. If you don't want to support
    // PC, you can do the same, but also change the version from pc to gc.
    // Note: It is not an error that no ports appear here with "dc" in their
    // definitions. DC clients use the same ports as GC clients, and newserv can
    // tell them apart at the time they connect.
    "gc-jp10":       [9000,  "gc",    "login_server"],
    "gc-jp11":       [9001,  "gc",    "login_server"],
    "gc-jp3te":      [9002,  "gc",    "login_server"],
    "gc-jp3":        [9003,  "gc",    "login_server"],
    "gc-us12t1":     [9064,  "gc",    "login_server"],
    "gc-us10":       [9100,  "pc",    "pc_console_detect"],
    "gc-us3":        [9103,  "gc",    "login_server"],
    "gc-eu10":       [9200,  "gc",    "login_server"],
    "gc-eu11":       [9201,  "gc",    "login_server"],
    "gc-us12t2":     [9202,  "gc",    "login_server"],
    "gc-eu3":        [9203,  "gc",    "login_server"],
    "pc":            [9300,  "pc",    "login_server"],
    "pc-patch":      [10000, "patch", "patch_server_pc"],
    "bb-patch":      [11000, "patch", "patch_server_bb"],
    "bb-init":       [12000, "bb",    "data_server_bb"],

    // TODO: If Xbox support ever gets built, add this port to the above config.
    // "xb-login":      [????, "xb", "login_server"],

    // Schthack PSOBB uses these ports.
    // "bb-patch2":     [10500, "patch", "patch_server_bb"],
    // "bb-init2":      [13000, "bb",    "data_server_bb"],

    // Ephinea PSOBB uses these ports. Note that 13000 is also used by Schthack
    // PSOBB, but not for the patch server; this means you unfortunately can't
    // support both Schthack and Ephinea PSOBB clients at the same time. This
    // may be fixed in the future using a similar technique as the
    // pc_console_detect behavior, but this isn't implemented yet.
    // "bb-patch3":     [13000, "patch", "patch_server_bb"],
    // "bb-init3":      [14000, "bb",    "data_server_bb"],

    // newserv uses these ports, but there is no external reason that these
    // numbers were chosen. You can change the port numbers here without any
    // issues. Some of these names are required; specifically:
    // - If there are any ports using the pc_console_detect behavior, then the
    //   pc-login and console-login ports must be defined. newserv will fail on
    //   startup if either port is not defined.
    // - If you have any DC, GC, or XB clients connecting to the server, the
    //   console-lobby port must be defined. The version for this port should be
    //   "gc", even though DC and XB clients can connect to it (newserv will
    //   automatically detect the correct game version for each client).
    // - If you have any PC clients connecting to the server, the pc-lobby port
    //   must be defined.
    // - If you have any BB clients connecting to the server, the bb-lobby,
    //   bb-data1, and bb-data2 ports must be defined.
    // - The bb-data1 and bb-data2 ports must be sequential; that is, the
    //   bb-data2 port number must be equal to the bb-data1 port number + 1.
    // - The proxy ports do not need to be defined unless the proxy server is
    //   enabled for the respective version via the ProxyDestinations fields
    //   (below).
    "console-login": [5100,  "gc",    "login_server"],
    "pc-login":      [5101,  "pc",    "login_server"],
    "console-lobby": [5110,  "gc",    "lobby_server"],
    "pc-lobby":      [5111,  "pc",    "lobby_server"],
    "bb-lobby":      [5112,  "bb",    "lobby_server"],
    "dc-proxy":      [5120,  "dc",    "proxy_server"],
    "pc-proxy":      [5121,  "pc",    "proxy_server"],
    "gc-proxy":      [5122,  "gc",    "proxy_server"],
    "xb-proxy":      [5123,  "xb",    "proxy_server"],
    "bb-proxy":      [5124,  "bb",    "proxy_server"],
    "bb-data1":      [12004, "bb",    "data_server_bb"],
    "bb-data2":      [12005, "bb",    "data_server_bb"],
  },

  // Where to listen for IP stack clients. This exists to interface with PSO GC
  // clients running in a local Dolphin emulator. To enable local Dolphin
  // clients to connect, set this to ["/tmp/dolphin-tap"] and configure Dolphin
  // to use the tapserver type of broadband adapter. You do not need to install
  // or run tapserver. See README.md for details on how to get PSO to connect
  // via this interface.
  // If you're doing unusual things, you can also add numbers or "address:port"
  // strings to this list to listen for tapserver connections on a TCP port.
  // This feature requires Unix sockets, so this option does nothing when
  // newserv runs under Windows.
  "IPStackListen": [],

  // Other servers to support proxying to. If this is empty for any game
  // version, the proxy server is disabled for that version. Entries in these
  // dictionaries should be of the form "name": "address:port"; the names are
  // used in the proxy server menu.
  "ProxyDestinations-DC": {},
  "ProxyDestinations-PC": {},
  "ProxyDestinations-GC": {},
  "ProxyDestinations-XB": {},
  // Proxy destination for patch server clients. If this is given, the internal
  // patch server (for PC and BB) is bypassed, and any client that connects to
  // the patch server is instead proxied to this destination.
  // "ProxyDestination-Patch": "",
  // Proxy destination for BB clients. If this is given, all BB clients that
  // connect to newserv will be proxied to this destination.
  // "ProxyDestination-BB": "",

  // There is a proxy option that allows users to save copies of various game
  // files on the server side. If you have external clients connecting to your
  // server, you can disable this option to prevent clients from generating
  // files on the server side which they will never be able to access.
  "ProxyAllowSaveFiles": true,

  // By default, the interactive shell runs if stdin is a terminal, and doesn't
  // run if it's not. This option, if present, overrides that behavior.
  // "RunInteractiveShell": false,

  // Specify which kinds of logging you want to be enabled. This allows you to
  // make the terminal more or less noisy when players are connected, so you can
  // see only the log messages you care about. The log levels are, in decreasing
  // order of verbosity, "DEBUG", "INFO", "WARNING", "ERROR", and "DISABLED".
  "LogLevels": {
    // AX messages are messages sent to the terminal with the $ax command.
    "AXMessages": "INFO",
    // Channel exceptions are messages about clients disconnecting unexpectedly,
    // or other unexpected network-level events.
    "ChannelExceptions": "INFO",
    // Client messages describe events that are specific to a single client's
    // connection or game state.
    "Clients": "INFO",
    // Command data messages show the raw data for all commands sent and
    // received, on both the game server and proxy server. If stderr is a
    // terminal, these messages are colored as well; green is for commands sent
    // by the client, yellow is for commands sent by newserv, and red is for
    // commands sent by the remote server (in proxy server sessions).
    "CommandData": "INFO",
    // Config messages describe server-wide events, and generally only occur
    // during the startup procedure.
    "Config": "INFO",
    // DNS server messages describe erroneous queries that the DNS server does
    // not respond to. Normal DNS queries do not generate any log messages.
    "DNSServer": "INFO",
    // Function compiler messages describe PowerPC function call assembly
    // events, which generally only occur during startup.
    "FunctionCompiler": "INFO",
    // IP stack simulator messages describe clients connecting and disconnecting
    // via the IP stack interface, and errors that occur at the simulated
    // network level within the simulator. This log is fairly verbose at the
    // info level, so by default we suppress those messages.
    "IPStackSimulator": "WARNING",
    // Lobby messages describe creation and deletion of lobbies and games, as
    // well as item tracking events within games. On Episode 3, debug messages
    // during battles go to this stream as well; use "DEBUG" here to see them.
    "Lobbies": "INFO",
    // Patch file index messages describe finding and preloading the patch files
    // available for download to BB and PC clients.
    "PatchFileIndex": "INFO",
    // Player data messages describe the loading and saving of player and
    // account data files.
    "PlayerData": "INFO",
    // Proxy server messages describe clients connecting and disconnecting from
    // the proxy server, as well as events that occur in each session.
    "ProxyServer": "INFO",
    // Replay messages are generated when replaying a session log (usually
    // during functional testing).
    "Replay": "INFO",
    // Game server messages describe clients connecting and disconnecting from
    // the game server.
    "GameServer": "INFO",
    // Static game data messages describe the loading of any kind of game data.
    "StaticGameData": "INFO",
  },

  // If this option is disabled, the server only allows users who have licenses
  // on the server to connect. If this is enabled, all users will be allowed to
  // connect even if they don't have licenses. When a user connects with an
  // unregistered license (serial number and access key combination, or username
  // and password combination on BB), a new license is created for them.
  // Licenses are addressed by serial numbers; on BB, the new license's serial
  // number is a hash of the username.
  "AllowUnregisteredUsers": true,

  // User to run the server as. If present, newserv will attempt to switch to
  // this user's permissions after loading its configuration and opening
  // listening sockets. The special value $SUDO_USER causes newserv to look up
  // the desired username in the $SUDO_USER variable instead.
  // "User": "$SUDO_USER",

  // Information menu contents. Each entry is a 3-list of
  // [title, short description, full contents]. In the short description and
  // full contents, you can use PSO escape codes with the $ character (for
  // example, $Cx for colors).
  "InformationMenuContents": [
    ["Lobby commands", "Show commands used\nin the lobby", "These commands can be used in the lobby.\n\n$C6%sli$C7: Show basic information about the lobby\n$C6%sarrow <color-id>$C7: Change your lobby arrow color\n$C6%sln [name]$C7: Change the lobby type (for you only)\n$C6%sexit$C7: Leave the current game or lobby\n$C6%spatch <name>$C7: Run a patch on your client\n\n$C8Episode 3 only:$C7\n$C6%ssong <song-id>$C7: Play a jukebox song"],
    ["Game commands", "Show commands used\nin games", "These commands can be used to customize games.\n\n$C8Before starting a game:$C7\n$C6%ssecid <section-id>$C7: Set your override section ID\n$C6%srand <seed>$C7: Set your override random seed\n\n$C8When in a game:$C7\n$C6%sli$C7: Show basic information about the game\n$C6%swhat$C7: Describe the nearest item on the ground\n$C6%smaxlevel <level>$C7: Set maximum level to join\n$C6%sminlevel <level>$C7: Set minimum level to join\n$C6%spassword [password]$C7: Lock or unlock the game"],
    ["Player commands", "Show commands used\nto edit player data", "These commands can be used to work with your player data.\n\n$C6%sbbchar <username> <password> <1-4>$C7: Convert your\n    character to BB format\n$C6%sedit <stat> <value>$C7: Modify your character data"],
    ["Ep3 commands", "Show commands used\nin Episode 3 games", "These commands can be used in Episode 3 games.\n\n$C8Before battle begins:$C7\n$C6%sinftime$C7: Disable all battle time limits, regardless\n    of limits set in battle rules\n$C6%sdefrange <min>-<max>$C7: Set the DEF dice range for\n    the next battle\n\n$C8During battle:$C7\n$C6%sspec$C7: Allow or forbid spectators\n$C6%sstat <what>$C7: Show a live statistic\n$C6%ssurrender$C7: Immediately lose the current battle\n\n$C8In game after battle:$C7\n$C6%ssaverec <name>$C7: Save recording of the last battle"],
    ["Cheat commands", "Show commands used\nfor cheating", "These commands can be used to cheat.\n\n$C8In a game:$C7\n$C6%scheat$C7: Enable or disable cheat mode\n\n$C8When cheat mode is enabled:$C7\n$C6%sinfhp$C7 / $C6%sinftp$C7: Enable or disable infinite HP or TP\n$C6%swarpme <area-id>$C7: Warp yourself to the given area\n$C6%swarpall <area-id>$C7: Warp everyone to the given area\n$C6%snext$C7: Warp yourself to the next area\n$C6%sswa$C7: Enable or disable switch assist\n$C6%si <name>$C7 / $C6%si <hex>$C7: Create an item\n\n$C8Episode 3 only:$C7\n$C6%sunset <index>$C7: Remove one of your set cards from\n    the field"],
    ["Admin commands", "Show commands used\nfor setting server\noptions", "These commands provide administration functions.\n\n$C6%sevent <event>$C7: Set the holiday in the current lobby\n$C6%sallevent <event>$C7: Set the holiday in all lobbies\n$C6%sann <message>$C7: Send an announcement message to\n    all players\n$C6%sax <message>$C7: Send a message to the server\n$C6%ssilence <who>$C7: Silence or unsilence a player\n$C6%skick <who>$C7: Disconnect a player\n$C6%sban <who>$C7: Ban a player"],
    ["Debug commands", "Show commands used\nfor debugging", "These commands are used for debugging.\n\n$C6%sdebug$C7: Enable or disable debug messages\n$C6%scall <id>$C7: Call a quest function\n$C6%sgc$C7: Send your own Guild Card to yourself\n$C6%spersist$C7: Cause game to not close when last player\n    leaves\n$C6%ssc <data>$C7: Send a command to yourself\n\n$C8Proxy only:$C7\n$C6%sss <data>$C7: Send a command to the remote server"],
    ["Using $i", "$C7Show how to use\nthe %si command", "The %si command is used to create items.\nUse it like this (for example):\n\n$C6%si Double Cannon +10 0/0/20/15/35$C7\n$C6%si Hell Pallasch$C7\n$C6%si Black Ring +5DEF$C7\n$C6%si Knight/Power++$C7\n$C6%si Sato 5/50/10.5/50 120% 200IQ$C7\n$C6%si Trimate x3$C7\n$C6%si 1000 Meseta$C7\n\nYou can also use a hex code instead of a name\n(this is the same as the Sato example above):\n\n$C6%si 023F7300F40188131A04881378C80000$C7"],
    ["Using $edit", "$C7Show how to use\nthe %sedit command", "%sedit is used in PSOBB to change character stats.\nUse one of the following subcommands:\n\n$C6%sedit ATP <value>$C7\n$C6%sedit MST <value>$C7\n$C6%sedit EVP <value>$C7\n$C6%sedit HP <value>$C7\n$C6%sedit DFP <value>$C7\n$C6%sedit ATA <value>$C7\n$C6%sedit LCK <value>$C7\n$C6%sedit MESETA <amount>$C7\n$C6%sedit EXP <amount>$C7\n$C6%sedit LEVEL <level>$C7\n$C6%sedit NAMECOLOR <color in hex, AARRGGBB format>$C7\n$C6%sedit SECID <section ID name>$C7\n$C6%sedit NAME <new character name>$C7\n$C6%sedit NPC <NPC name>$C7\n$C6%sedit TECH <technique name> <new technique level>$C7\n\nNPC names: none, ninja, rico, sonic, knuckles,\n    flowen, elly\n\nTechnique names: foie, gifoie, rafoie, barta,\n    gibarta, rabarta, zonde, gizonde, razonde,\n    grants, deband, jellen, zalure, shifta, ryuker,\n    resta, anti, reverser, megid, all"],
    ["Using $bbchar", "$C7Show how to use\nthe %sbbchar command", "%sbbchar is used to convert a character from an\nolder version of PSO to Blue Burst format and save\nit on this server. Use the command like this:\n\n$C6%sbbchar <username> <password> <slot>$C7\n\nIf the username and password are correct, the\ncharacter that you're currently playing as will be\nconverted to PSOBB format and saved under that\naccount, in the specified character slot (1-4)."],
    ["Text colors", "Show color values", "These values can be used to color text in\nsome situations with escape codes like %sC6.\nFor example, these can be used in the Info Board.\n\n$C0%sC0$C7 - Black     $C1%sC1$C7 - Blue     $C2%sC2$C7 - Green\n$C3%sC3$C7 - Cyan      $C4%sC4$C7 - Red     $C5%sC5$C7 - Purple\n$C6%sC6$C7 - Yellow    $C7%sC7$C7 - White   $C8%sC8$C7 - Pink\n$C9%sC9$C7 - Violet     $CG%sCG$C7 - Orange Pulse\n\n$Ca%sCa$C7 - Orange (Episode 3 only)"],
    ["Arrow colors", "$C7Show lobby arrow\ncolor list", "Use these names with %sarrow.\n\n0 - no marker\n1 - red\n2 - blue\n3 - green\n4 - yellow\n5 - purple\n6 - cyan\n7 - orange\n8 - pink\n9 - white\n10 - white\n11 - white\n12 - black"],
    ["Event names", "$C7Show lobby event\nnames", "Use these names with %sevent and %sallevent.\n\nnone - no event\nxmas - Christmas event\nval - Valentine's Day\neaster - Easter Sunday event\nhallo - Halloween event\nsonic - Sonic Adventure DX event\nnewyear - New Year's event\nbval - White Day\nwedding - Wedding Day event\nspring - spring event\ns-spring - spring event with striped background\nsummer - summer event\ns-summer - summer event with striped background\nfall - fall event"],
    ["GC lobby types", "$C7Show lobby type\nlist for Episodes\nI & II", "Use these names with %sln on Episodes 1 & 2.\n$C6*$C7 indicates lobbies where players can't move.\n\nnormal - standard lobby\ninormal - under standard lobby $C6*$C7\nipc - under PC lobby $C6*$C7\niball - under soccer lobby $C6*$C7\ncave1 - Cave 1 $C6*$C7\ncave2u - Cave 2 Ultimate $C6*$C7\ndragon - Dragon stage (floor is black)\nderolle - De Rol Le stage (water/walls are gone)\nvolopt - Vol Opt stage\ndarkfalz - Dark Falz stage"],
    ["Ep3 lobby types", "$C7Show lobby type\nlist for Episode III", "Use these names with %sln on Episode 3.\n\nnormal - Standard lobby\nplanet - Blank Ragol lobby\nclouds - Blank sky lobby\ncave - Unguis Lapis (platform missing)\njungle - Nebula Montana 1 (Ep2 Jungle)\nforest2-1 - Lupus Silva 2 (Ep1 Forest 2)\nforest2-2 - Lupus Silva 1 (Ep1 Forest 2)\nwindpower - Molae Venti\noverview - Nebula Montana 2\nseaside - Tener Sinus (Ep2 Seaside)\nfons - Mortis Fons\ndmorgue - Destroyed Morgue (column missing)\ncaelum - Tower of Caelum (top)\ncyber - Cyber\nboss1 - Castor/Pollux map\nboss2 - Amplum Umbra map\ndolor - Dolor Odor\nravum - Ravum Aedes Sacra\nsky - Via Tubus (tube missing)\nmorgue - Morgue (column missing)"],
    ["Area list", "$C7Show stage code\nlist", "Use these names with %swarpme and %swarpall.\n$C2Green$C7 areas will be empty unless you are in a quest.\n$C6Yellow$C7 areas will not allow you to move.\n\n    $C8Episode 1  / Episode 2        / Episode 4$C7\n0: Pioneer 2  / Pioneer 2        / Pioneer 2\n1: Forest 1   / Temple Alpha    / Crater East\n2: Forest 2   / Temple Beta     / Crater West\n3: Caves 1    / Spaceship Alpha / Crater South\n4: Caves 2    / Spaceship Beta  / Crater North\n5: Caves 3    / CCA              / Crater Interior\n6: Mines 1    / Jungle North     / Desert 1\n7: Mines 2    / Jungle South     / Desert 2\n8: Ruins 1     / Mountain         / Desert 3\n9: Ruins 2     / Seaside          / Saint Million\n10: Ruins 3   / Seabed Upper    / $C6Purgatory$C7\n11: Dragon    / Seabed Lower\n12: De Rol Le / Gal Gryphon\n13: Vol Opt   / Olga Flow\n14: Dark Falz / Barba Ray\n15: $C2Lobby$C7     / Gol Dragon\n16: $C6Battle 1$C7  / $C6Seaside Night$C7\n17: $C6Battle 2$C7  / $C2Tower$C7"],
  ],

  // Welcome message. If not blank, this message will be shown to PSO GC users
  // upon first connecting. (If this is blank, they will be taken directly to
  // the main menu instead.) The welcome message is never shown to PSO PC or PSO
  // BB users, though the patch server message (below) can be used for a similar
  // purpose.
  "WelcomeMessage": "",

  // Patch server message. If not blank, these messages will be shown to PSO PC
  // and PSO BB users (respectively) when they connect to the patch server. Note
  // that PSO PC displays the text in a Windows edit control instead of using
  // PSO's normal text renderer, so linebreaks must be \r\n and color escapes
  // (e.g. $C6) do not work in PCPatchServerMessage.
  "PCPatchServerMessage": "newserv patch server\r\n\r\nThis server is not affiliated with, sponsored by, or in any other way connected to SEGA or Sonic Team, and is owned and operated completely independently.",
  "BBPatchServerMessage": "$C7newserv patch server\n\nThis server is not affiliated with, sponsored by, or in any\nother way connected to SEGA or Sonic Team, and is owned\nand operated completely independently.",

  // Default lobby event. If set, this sets the holiday event in all lobbies at
  // server start time, as well as the pre-lobby holiday event. The event can be
  // changed in each lobby independently with the $event command, or in all
  // lobbies with the $allevent command. When a game is created, it inherits the
  // holiday event from the lobby from which it was created.
  // The value for this field can be a string like "xmas" (the values have the
  // same meanings as the $event command), or an integer.
  // "LobbyEvent": "xmas",
  // Episode 3 menu song. If set, Episode 3 clients will hear this song when
  // they are at the newserv main menu. If set, this value must be an integer.
  // "Episode3MenuSong": 0,

  // If this is enabled, all players will have infinite Meseta, effectively
  // making the jukebox and Pinz's Shop free. Otherwise, Meseta behaves as
  // defined below. Meseta rewards are tied to a player's license (and therefore
  // their serial number) and are stored server-side. Unlike other servers,
  // newserv forbids overdrafting Meseta; if this option is disabled and a
  // player spends Meseta they don't have, the player is disconnected.
  "Episode3InfiniteMeseta": false,
  // Meseta values for winning each tournament round. If a player defeats
  // another player in round 1, for example, they will earn 400 Meseta; if they
  // then defeat a COM in round 2, they will earn 200 more Meseta; if they
  // defeat another player in round 3, they will earn an additional 600.
  "Episode3DefeatPlayerMeseta": [400, 500, 600, 700, 800],
  "Episode3DefeatCOMMeseta": [100, 200, 300, 400, 500],
  // Winning the final round is worth this much extra Meseta.
  "Episode3FinalRoundMesetaBonus": 300,
  // If this option is enabled, the jukebox in Episode 3 lobbies does not deduct
  // any Meseta when a song is played. The check for 100 or more meseta happens
  // client-side, however, so even if this option is enabled, the client must
  // either have 100 or more Meseta or use the "Jukebox is free" Action Replay
  // code to be able to play songs.
  "Episode3JukeboxIsFree": false,

  // Episode 3 battle behavior flags. When set to zero, battles behave as they
  // did on the original Sega servers. Combinations of behaviors can be enabled
  // by bitwise-OR'ing together the following values:
  // 0x0001 => Disable deck verification entirely
  // 0x0002 => Disable owned card count check during deck verification (this
  //           enables the use of the non-saveable Have All Cards Action Replay
  //           code, but retains all the other validity checks)
  // 0x0004 => Allow cards with the D1 and D2 ranks to be used in battle
  // 0x0008 => Disable overall and per-phase battle time limits, regardless of
  //           the values chosen during battle rules setup
  // 0x0010 => Enable debug messages in Episode 3 games and battles
  // 0x0040 => Enable battle recording (after a battle, players can save the
  //           recording with the $saverec <filename> command)
  // 0x0080 => Disable command masking during battles
  // 0x0100 => Disable interference (COMs randomly coming to each other's
  //           rescue)
  // 0x0200 => Allow interference even when neither player is a COM
  "Episode3BehaviorFlags": 0x0002,

  // Episode 3 EX result values. This allows you to set the amount of EX players
  // will get for winning or losing online matches. Each set of numbers is a
  // list of thresholds; the first number in each pair is the level difference
  // threshold and the second is the amount of EX. The game scans each list for
  // the entry whose threshold value is less than or equal to the level
  // difference. For example, if player A's CLv is 70 and player B's CLv is 55,
  // and the lists are set up like this:
  //   "Win": [[30, 40], [20, 30], [10, 20], ...],
  //   "Lose": [[0, 0], [-10, -5], [-20, -10], ...],
  // ...then player A would get 20 EX for defeating player B (since the
  // difference between their CLvs is 15, so the first two Win entries don't
  // apply), and player B would lose 10 EX for losing to player A (again, since
  // the first two Lose entries don't apply). If none of the thresholds apply,
  // then the last entry's value is used regardless of its threshold. All lists
  // here must contain 10 [threshold, value] pairs.
  "Episode3EXResultValues": {
    "Default": {
      "Win": [[50, 100], [30, 80], [15, 70], [10, 55], [7, 45], [4, 35], [1, 25], [-1, 20], [-9, 15], [0, 10]],
      "Lose": [[1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-10, -10], [-30, -10], [0, -15]],
    },
    "Tournament": {
      "Win": [[60, 70], [40, 50], [25, 45], [20, 40], [13, 35], [8, 30], [5, 25], [2, 20], [-1, 15], [0, 10]],
      "Lose": [[1, 0], [-1, 0], [-3, 0], [-5, 0], [-7, 0], [-10, 0], [-12, 0], [-15, 0], [-18, 0], [0, 0]],
    },
    "TournamentFinalMatch": {
      "Win": [[40, 100], [25, 95], [20, 85], [15, 75], [10, 65], [8, 60], [5, 50], [2, 40], [-1, 30], [0, 20]],
      "Lose": [[1, -5], [-1, -10], [-3, -15], [-7, -20], [-15, -20], [-20, -25], [-30, -30], [-40, -30], [-50, -34], [0, -40]],
    },
  },

  // Episode 3 card auction configuration. CardAuctionPoints specifies how many
  // points each player gets when they join an auction (this may be anywhere
  // from 0 to 65535, but a somewhat-low number is generally good).
  // CardAuctionSize specifies how many cards will be present in each auction;
  // this can be an integer if auctions should always have the same number of
  // cards, or it can be a list of [min count, max count] and the server will
  // choose a random number of cards in that range for each auction.
  // CardAuctionPool is a dictionary specifying the relative frequencies and
  // costs of each card in the auction pool. Relative frequencies are 64-bit
  // integers, but should generally be less than 0x0100000000000000 to avoid
  // excessive bias. All relative frequencies must sum to a number less than
  // 0x10000000000000000 (the limit of an unsigned 64-bit integer). When players
  // enter an auction, the auctioned cards are drawn with replacement from the
  // distribution specified here.
  "CardAuctionPoints": 30,
  "CardAuctionSize": [6, 8],
  "CardAuctionPool": {
    // "CardName": [RelativeFrequency, MinPrice]
    "Beat +":          [500, 4],
    "Berserk +":       [800, 7],
    "Biboo":           [500, 6],
    "Chaos Bringer":   [900, 3],
    "Charity +":       [800, 4],
    "Counter +":       [800, 9],
    "Dark Flow":       [600, 11],
    "Dolmolm":         [500, 8],
    "Egg Rappy":       [800, 2],
    "Epsilon":         [300, 7],
    "Gather +":        [800, 8],
    "Gibbles +":       [700, 6],
    "Grants":          [200, 4],
    "Hallo Rappy +":   [800, 3],
    "Heart Of Poumn":  [600, 5],
    "Heaven Punisher": [500, 6],
    "Lavis Cannon":    [400, 7],
    "Piety":           [800, 5],
    "Rag Rappy +":     [800, 2],
    "Rich +":          [700, 2],
    "Snail Pace":      [900, 3],
    "Striker of Chao": [500, 5],
    "Thread +":        [800, 8],
  },

  // Episode 3 lobby banners. Currently only images are supported.
  // Image files are expected to be in BMP or PPM format, and should be placed
  // in the system/ep3/banners directory. Image sizes must be a multiple of 4
  // pixels in both dimensions, must be no larger than 0x37000 bytes when
  // encoded as a GVM file (newserv will do this encoding internally), and must
  // compress to no larger than 0x3800 bytes. newserv will fail on startup if
  // any of these constraints aren't satisfied.
  // Banners are specified as lists of [type, where, filename]. type should be
  // 1 for image files. where is a bitmask specifying where in the lobby the
  // banner should appear; the bits are:
  // 00000001: South above-counter banner (facing away from teleporters)
  // 00000002: West above-counter banner
  // 00000004: North above-counter banner (facing toward jukebox)
  // 00000008: East above-counter banner
  // 00000010: Banner above west (left) teleporter
  // 00000020: Banner above east (right) teleporter
  // 00000040: Banner at south end of lobby (opposite the jukebox)
  // 00000080: Immediately left of 00000040
  // 00000100: Immediately right of 00000040
  // 00000200: Same as 00000080, but further left and at a slight inward angle
  // 00000400: Same as 00000100, but further right and at a slight inward angle
  // 00000800: Banner at north end of lobby, above the jukebox
  // 00001000: Immediately right of 00000800
  // 00002000: Immediately left of 00000800
  // 00004000: Same as 00001000, but further right and at a slight inward angle
  // 00008000: Same as 00002000, but further left and at a slight inward angle
  // 00010000: Banners at west AND east ends of lobby, next to battle tables
  // 00020000: Immediately left of 00001000 (2 banners)
  // 00040000: Immediately right of 00001000 (2 banners)
  // 00080000: Banners on southwest AND southeast ends of the lobby
  // 00100000: Banners on south-southwest AND south-southeast ends of the lobby
  // 00200000: Floor banners in front of the counter (4 banners)
  // 00400000: Banners on both small walls in front of the battle tables
  // 00800000: On southern platform
  // 01000000: In front of jukebox
  // 02000000: In western battle table corner (next to 4-player tables)
  // 04000000: In eastern battle table corner (next to 2-player tables)
  // 08000000: In southeastern battle table corner (next to 2-player tables)
  // 10000000: In southwestern battle table corner (next to 4-player tables)
  // 20000000: Just north-northwest of the counter
  // 40000000: In front of the small wall in front of the 2-player battle tables
  // 80000000: Inside the lobby counter, facing southeast
  // For example, to make the image system/ep3/banners/test-image.bmp appear in
  // the lobby above both the left and right teleporters, you would set
  // Episode3LobbyBanners like so:
  // "Episode3LobbyBanners": [
  //   [1, 0x00000030, "test-image.bmp"],
  // ],
  "Episode3LobbyBanners": [],

  // Quest category configuration. See README.md for information on how quest
  // files should be named. This list specifies the quest category names and
  // descriptions. (We don't use a map here because the category order
  // specified here is the order that appears in the quest menu.)
  "QuestCategories": [
    // Each entry is [flags, type, token, category_name, description].
    // These fields are:
    //   flags: a bit field containing the following:
    //       0x01 - appears in normal mode
    //       0x02 - appears in battle mode
    //       0x04 - appears in challenge mode
    //       0x08 - appears in solo mode (BB)
    //       0x10 - appears at government counter (BB)
    //       0x20 - appears in download quest menu
    //       0x40 - appears in Episode 3 download quest menu
    //       0x80 - hidden on pre-V3 versions (DC, PC)
    //   type: the character that newserv expects at the beginning of the quest
    //       filename, generally one of b, c, d, e, or q.
    //   short_token: the token newserv expects to see in quest filenames after
    //       the quest number.
    //   category_name: what appears in the quest menu on the client.
    //   description: what appears in the category description window (may
    //       contain color escape codes like $C6).
    [0x21, "q", "ret", "Retrieval", "$E$C6Quests that involve\nretrieving an object"],
    [0x21, "q", "ext", "Extermination", "$E$C6Quests that involve\ndestroying all\nmonsters"],
    [0x21, "q", "evt", "Events", "$E$C6Quests that are part\nof an event"],
    [0x21, "q", "shp", "Shops", "$E$C6Quests that contain\nshops"],
    [0x21, "q", "vr", "Virtual Reality", "$E$C6Quests that are\ndone in a simulator"],
    [0xA1, "q", "twr", "Control Tower", "$E$C6Quests that take\nplace at the Control\nTower"],
    [0x02, "b", "", "Battle", "$E$C6Battle mode rule\nsets"],
    [0x04, "c", "", "Challenge (Episode 1)", "$E$C6Challenge mode\nquests in Episode 1"],
    [0x84, "d", "", "Challenge (Episode 2)", "$E$C6Challenge mode\nquests in Episode 2"],
    [0x08, "q", "1p", "Solo", "$E$C6Quests that require\na single player"],
    [0x10, "q", "gv1", "Hero in Red", "$E$CG-Red Ring Rico-\n$C6Quests that follow\nthe Episode 1\nstoryline"],
    [0x10, "q", "gv2", "The Military's Hero", "$E$CG-Heathcliff Flowen-\n$C6Quests that follow\nthe Episode 2\nstoryline"],
    [0x10, "q", "gv4", "The Meteor Impact Incident", "$E$C6Quests that follow\nthe Episode 4\nstoryline"],
    [0x20, "q", "dl", "Download", "$E$C6Quests to download\nto your Memory Card"],
    [0x40, "e", "", "Download", "$E$C6Quests to download\nto your Memory Card"],
  ],

  // Cheat mode behavior. There are three values:
  //   "Off": Cheat mode is disabled on the entire server. Cheat mode cannot be
  //       enabled in games, and the $cheat command does nothing. This also
  //       disables cheat options on the proxy server.
  //   "OffByDefault": Cheat mode is disabled on the entire server, but can be
  //       enabled in each game with the $cheat command. Cheat options are
  //       available on the proxy server.
  //   "OnByDefault": Cheat mode is enabled on the entire server, but can be
  //       disabled in each game with the $cheat command. Cheat options are
  //       available on the proxy server.
  "CheatModeBehavior": "OnByDefault",

  // Whether to enable patches on Episode 3 USA. This functionality depends on
  // exploiting a bug in Episode 3, and while it seems to work reliably on
  // Dolphin, it hasn't been tested on a real GameCube. So, newserv doesn't
  // enable Episode 3 USA patches by default; it only does if this option is on.
  // "EnableEpisode3SendFunctionCall": true,

  // By default, the server keeps track of items in all games, even for versions
  // other than Blue Burst. This enables use of the $what command, as well as
  // protection against item duplication cheats (the cheater is disconnected
  // instead of the other players). If item tracking causes any issues, it can
  // be turned off here. This option has no effect on Blue Burst games - item
  // tracking is always enabled for them.
  "EnableItemTracking": true,

  // Enable or disable drops by default in non-BB games (drops are always
  // enabled in BB games). The leader can toggle drops in each game with the
  // $drop command.
  "EnableDrops": true,

  // Whether to enable certain exception handling. Disabling this causes
  // newserv to abort when any client causes an exception, which is generally
  // only useful for debugging newserv itself. This setting should usually be
  // left on (which is the default behavior).
  "CatchHandlerExceptions": true,
}
